mod <- lm(t~p+I(p^2)+I(p^3)+I(p^4)+I(p^5))
summary(mod)
coefs(mod)
coef(mod)
mod <- lm(log(t)~log(p))
summary(mod)
coef(mod)
pred <- fitted(mod)
data <- data.frame(t, p, pred)
plot(x=t, y=pred)
plot(x=t, y=exp(pred))
mod <- lm(p~t+I(t^2)+I(t^3)+I(t^4)+I(t^5))
summary(mod)
coef(mod)
pred <- fitted(mod)
data <- data.frame(t, p, pred)
plot(x=t, y=pred)
coef(mod)
mod <- lm(log(p)~log(t))
summary(mod)
coef(mod)
pred <- fitted(mod)
data <- data.frame(t, p, pred)
plot(x=t, y=pred)
plot(x=t, y=exp(pred))
?log()
?log
plot(x=t, y=pred)
plot(x=t, y=exp(pred))
p <- c(50,
69,
84,
93,
98,
100,
100,
100,
100)
mod <- lm(log(p)~log(t))
?log
summary(mod)
coef(mod)
log_t <- log(t)
mod <- lm(log(p)~log_t+I(log_t^2)+I(log_t^3))
summary(mod)
coef(mod)
mod <- lm(log(p)~log_t+I(log_t^2)+I(log_t^3))
summary(mod)
coef(mod)
knitr::opts_chunk$set(echo = TRUE)
library("tidyverse"); library("ggrepel")
# Set the appropriate working directory
getwd()
setwd("C:/Users/kelop/Box/Infant Motor R01/WU Only Infant Motor R01/Logistics/Assessment Summaries/Aim1_18mth/Sample Data/")
list.files()
DATA <- read.csv("./InfantMotorDevelopme-Aim118MonthParticipa_DATA_2022-10-06_1350.csv",
sep=",", stringsAsFactors = TRUE, na.strings=c("","NA"))
# Set the record ID number for whom you want this report:
id_num <- "WU1001101"
# Code will pull out the preferred name for that subject:
sub <- as.character(factor(DATA[DATA$record_id==id_num,]$preferredname[1]))
DOB <- as.character(factor(DATA[DATA$record_id==id_num,]$dateofbirth[1]))
visit <-as.character(factor(DATA[DATA$record_id==id_num,]$acceldate[2]))
# Create a General Background Chart
area <- factor(c(rep("Communication", 60), rep("Gross Motor", 60),
rep("Fine Motor", 60), rep("Problem Solving", 60),
rep("Personal-Social", 60)))
score <- c(rep(seq(1:60), 5))
cutoff <- c(rep(29.65, 60), rep(22.25, 60),
rep(25.14, 60), rep(27.72, 60),
rep(25.34, 60))
cutoff2 <- c(rep(38.65, 60), rep(34, 60),
rep(36, 60), rep(38.72, 60),
rep(36.34, 60))
CUTOFFS <- data.frame(area,score, cutoff, cutoff2)
CUTOFFS <- CUTOFFS %>% group_by(area) %>%
mutate(code = factor(ifelse(score<=cutoff, "red", ifelse(score<=cutoff2, "yellow", "green"))))
CUTOFFS$area <- fct_relevel(CUTOFFS$area, "Personal-Social", "Problem Solving", "Fine Motor", "Gross Motor", "Communication")
CUTOFFS$code <- fct_relevel(CUTOFFS$code, "green", "yellow", "red")
p <- ggplot(data=CUTOFFS, aes(x=area)) +
geom_bar(aes(group=code, fill=code), col="black", position="stack", stat="count") +
coord_flip() +
scale_x_discrete(name = "Area") +
scale_y_continuous(name = "Score", limits = c(0,60), breaks=c(seq(from=0, to=60, by=5))) +
scale_fill_manual(values = c("lightgreen", "palegoldenrod", "skyblue1")) +
theme_bw()+
theme(axis.text=element_text(size=10, color="black"),
legend.text=element_text(size=10, color="black"),
legend.title=element_text(size=10, face="bold"),
axis.title=element_text(size=10, face="bold"),
plot.title=element_text(size=10, face="bold", hjust=0.5),
panel.grid.minor = element_blank(),
strip.text = element_text(size=10, face="bold"),
legend.position = "none")
SUB_DATA <- DATA %>% filter(preferredname == sub) %>%
select(record_id, agestage_comscore_18, agestage_grossscore_18, agestage_finescore_18,
agestage_probsolvscore_18, agestage_persocscore_18) %>%
rename("Communication" = agestage_comscore_18,
"Gross Motor" = agestage_grossscore_18,
"Fine Motor"  = agestage_finescore_18,
"Problem Solving" = agestage_probsolvscore_18,
"Personal-Social" = agestage_persocscore_18)
SUB_DATA <- SUB_DATA %>% pivot_longer(cols="Communication":"Personal-Social",
names_to = "area", values_to = "score")
p <- p + geom_segment(data=SUB_DATA, aes(x=area, xend=area, y=0, yend=score), lwd=1.5) +
geom_point(data=SUB_DATA, aes(x=area, y=score),
size=3, color="black",
fill="grey20", shape=21, stroke=2) +
geom_label(data=SUB_DATA, aes(x=area, y=score, label = score),
fill="black", color = "white", fontface = "bold")
cm <- SUB_DATA[SUB_DATA$area=="Communication",]$score
gm <- SUB_DATA[SUB_DATA$area=="Gross Motor",]$score
fm <- SUB_DATA[SUB_DATA$area=="Fine Motor",]$score
pb <- SUB_DATA[SUB_DATA$area=="Problem Solving",]$score
ps <- SUB_DATA[SUB_DATA$area=="Personal-Social",]$score
#print(p)
SUB_DATA <- DATA %>% filter(preferredname == sub) %>%
select(record_id, mchat_risklevel, mchat_qc, mchat_score) %>%
rename("M-CHAT Score" = mchat_score,
"Risk Level" = mchat_risklevel)
knitr::kable(SUB_DATA %>% select(-record_id, - mchat_qc) %>%
relocate(`M-CHAT Score`, `Risk Level`),
format = "simple"
)
SUB_DATA <- DATA %>% filter(preferredname == sub) %>%
select(record_id, cdi_vocabunderstoodpercent_18, cdi_vocabproducedpercent_18) %>%
rename("Words Produced (percentile)" = cdi_vocabproducedpercent_18,
"Words Understood (percentile)" = cdi_vocabunderstoodpercent_18)
knitr::kable(t(SUB_DATA %>% select(-record_id) %>%
relocate(`Words Produced (percentile)`, `Words Understood (percentile)`)),
format = "simple")
INTERNAL <- read.csv("./cbcl_internal.csv", sep=",",
stringsAsFactors = TRUE, na.strings=c("","NA"))
EXTERNAL <- read.csv("./cbcl_external.csv", sep=",",
stringsAsFactors = TRUE, na.strings=c("","NA"))
TOTAL <- read.csv("./cbcl_total.csv", sep=",",
stringsAsFactors = TRUE, na.strings=c("","NA"))
DATA[DATA$record_id==id_num,]$cbcl_internal_18[2]
DATA[DATA$record_id==id_num,]$cbcl_internal_18
knitr::opts_chunk$set(echo = TRUE)
library("tidyverse"); library("ggrepel")
# Set the appropriate working directory
getwd()
setwd("C:/Users/lohse/Box/Infant Motor R01/WU Only Infant Motor R01/Logistics/Assessment Summaries/Aim2_18mth/Sample Data/")
knitr::opts_chunk$set(echo = TRUE)
library("tidyverse"); library("ggrepel")
# Set the appropriate working directory
getwd()
setwd("C:/Users/kelop/Box/Infant Motor R01/WU Only Infant Motor R01/Logistics/Assessment Summaries/Aim2_18mth/Sample Data/")
list.files()
DATA <- read.csv("./InfantMotorDevelopme-Aim218MonthParticipa_DATA_2022-10-06_1434.csv",
sep=",", stringsAsFactors = TRUE)
# Set the record ID number for whom you want this report:
id_num <- "WU2102"
# Code will pull out the preferred name for that subject:
sub <- as.character(factor(DATA[DATA$record_id==id_num,]$preferredname))
DOB <- as.character(factor(DATA[DATA$record_id==id_num,]$dateofbirth))
visit <- as.character(factor(DATA[DATA$record_id==id_num,]$acceldate))
# Create a General Background Chart
area <- factor(c(rep("Communication", 60), rep("Gross Motor", 60),
rep("Fine Motor", 60), rep("Problem Solving", 60),
rep("Personal-Social", 60)))
score <- c(rep(seq(1:60), 5))
cutoff <- c(rep(29.65, 60), rep(22.25, 60),
rep(25.14, 60), rep(27.72, 60),
rep(25.34, 60))
cutoff2 <- c(rep(38.65, 60), rep(34, 60),
rep(36, 60), rep(38.72, 60),
rep(36.34, 60))
CUTOFFS <- data.frame(area,score, cutoff, cutoff2)
CUTOFFS <- CUTOFFS %>% group_by(area) %>%
mutate(code = factor(ifelse(score<=cutoff, "red", ifelse(score<=cutoff2, "yellow", "green"))))
CUTOFFS$area <- fct_relevel(CUTOFFS$area, "Personal-Social", "Problem Solving", "Fine Motor", "Gross Motor", "Communication")
CUTOFFS$code <- fct_relevel(CUTOFFS$code, "green", "yellow", "red")
p <- ggplot(data=CUTOFFS, aes(x=area)) +
geom_bar(aes(group=code, fill=code), col="black", position="stack", stat="count") +
coord_flip() +
scale_x_discrete(name = "Area") +
scale_y_continuous(name = "Score", limits = c(0,60), breaks=c(seq(from=0, to=60, by=5))) +
scale_fill_manual(values = c("lightgreen", "palegoldenrod", "skyblue1")) +
theme_bw()+
theme(axis.text=element_text(size=10, color="black"),
legend.text=element_text(size=10, color="black"),
legend.title=element_text(size=10, face="bold"),
axis.title=element_text(size=10, face="bold"),
plot.title=element_text(size=10, face="bold", hjust=0.5),
panel.grid.minor = element_blank(),
strip.text = element_text(size=10, face="bold"),
legend.position = "none")
SUB_DATA <- DATA %>% filter(preferredname == sub) %>%
select(record_id, agestage_comscore_18, agestage_grossscore_18, agestage_finescore_18,
agestage_probsolvscore_18, agestage_persocscore_18) %>%
rename("Communication" = agestage_comscore_18,
"Gross Motor" = agestage_grossscore_18,
"Fine Motor"  = agestage_finescore_18,
"Problem Solving" = agestage_probsolvscore_18,
"Personal-Social" = agestage_persocscore_18)
SUB_DATA <- SUB_DATA %>% pivot_longer(cols="Communication":"Personal-Social",
names_to = "area", values_to = "score")
p <- p + geom_segment(data=SUB_DATA, aes(x=area, xend=area, y=0, yend=score), lwd=1.5) +
geom_point(data=SUB_DATA, aes(x=area, y=score),
size=3, color="black",
fill="grey20", shape=21, stroke=2) +
geom_label(data=SUB_DATA, aes(x=area, y=score, label = score),
fill="black", color = "white", fontface = "bold")
cm <- SUB_DATA[SUB_DATA$area=="Communication",]$score
gm <- SUB_DATA[SUB_DATA$area=="Gross Motor",]$score
fm <- SUB_DATA[SUB_DATA$area=="Fine Motor",]$score
pb <- SUB_DATA[SUB_DATA$area=="Problem Solving",]$score
ps <- SUB_DATA[SUB_DATA$area=="Personal-Social",]$score
print(p)
SUB_DATA <- DATA %>% filter(preferredname == sub) %>%
select(record_id, mchat_risklevel, mchat_qc, mchat_score) %>%
rename("M-CHAT Score" = mchat_score,
"Risk Level" = mchat_risklevel)
knitr::kable(SUB_DATA %>% select(-record_id, - mchat_qc) %>%
relocate(`M-CHAT Score`, `Risk Level`),
format = "simple"
)
SUB_DATA <- DATA %>% filter(preferredname == sub) %>%
select(record_id, cdi_vocabunderstoodpercent_18, cdi_vocabproducedpercent_18) %>%
rename("Words Produced (percentile)" = cdi_vocabproducedpercent_18,
"Words Understood (percentile)" = cdi_vocabunderstoodpercent_18)
knitr::kable(t(SUB_DATA %>% select(-record_id) %>%
relocate(`Words Produced (percentile)`, `Words Understood (percentile)`)),
format = "simple")
Type <- c("Interalizing Problems", "Externalizing Problems", "Total Problems")
`Raw Score` <- c(DATA[DATA$record_id==id_num,]$cbcl_internal_18,
DATA[DATA$record_id==id_num,]$cbcl_external_18,
DATA[DATA$record_id==id_num,]$cbcl_totalprobs_18)
`T-Score` <- c(NA, NA, NA)
`Percentile` <- c(NA, NA, NA)
SUB_DATA <- data.frame(Type, `Raw Score`, `T-Score`, `Percentile`)
knitr::kable(SUB_DATA,
col.names = c("Type", "Raw Score", "T-Score", "Percentile"),
format = "simple")
# I need to create a look up table to translate from the raw scores to t-scores
INTERNAL <- read.csv("./cbcl_internal.csv", sep=",",
stringsAsFactors = TRUE, na.strings=c("","NA"))
EXTERNAL <- read.csv("./cbcl_external.csv", sep=",",
stringsAsFactors = TRUE, na.strings=c("","NA"))
TOTAL <- read.csv("./cbcl_total.csv", sep=",",
stringsAsFactors = TRUE, na.strings=c("","NA"))
DATA[DATA$record_id==id_num,]$cbcl_internal_18[2]
DATA[DATA$record_id==id_num,]$cbcl_internal_18,
DATA[DATA$record_id==id_num,]$cbcl_internal_18
head(INTERNAL)
head(INTERNAL)
INTERNAL %>% filter(internal_raw=DATA[DATA$record_id==id_num,]$cbcl_internal_18)
INTERNAL %>% filter(internal_raw==DATA[DATA$record_id==id_num,]$cbcl_internal_18)
INTERNAL %>% filter(internal_raw==DATA[DATA$record_id==id_num,]$cbcl_internal_18)
print(INTERNAL %>% filter(internal_raw==DATA[DATA$record_id==id_num,]$cbcl_internal_18))
INTERNAL %>% filter(internal_raw==DATA[DATA$record_id==id_num,]$cbcl_internal_18)
EXTERNAL %>% filter(external_raw==DATA[DATA$record_id==id_num,]$cbcl_external_18)
TOTAL %>% filter(total_raw==DATA[DATA$record_id==id_num,]$cbcl_total_18)
TOTAL %>% filter(total_raw==DATA[DATA$record_id==id_num,]$cbcl_totalprobs_18)
INTERNAL <- read.csv("./cbcl_internal.csv", sep=",",
stringsAsFactors = TRUE, na.strings=c("","NA"))
EXTERNAL <- read.csv("./cbcl_external.csv", sep=",",
stringsAsFactors = TRUE, na.strings=c("","NA"))
Type <- c("Interalizing Problems", "Externalizing Problems", "Total Problems")
`Raw Score` <- c(DATA[DATA$record_id==id_num,]$cbcl_internal_18,
DATA[DATA$record_id==id_num,]$cbcl_external_18,
DATA[DATA$record_id==id_num,]$cbcl_totalprobs_18)
# I need to create a look up table to translate from the raw scores to t-scores
INTERNAL <- read.csv("./cbcl_internal.csv", sep=",",
stringsAsFactors = TRUE, na.strings=c("","NA"))
EXTERNAL <- read.csv("./cbcl_external.csv", sep=",",
stringsAsFactors = TRUE, na.strings=c("","NA"))
TOTAL <- read.csv("./cbcl_total.csv", sep=",",
stringsAsFactors = TRUE, na.strings=c("","NA"))
INTERNAL %>% filter(internal_raw==DATA[DATA$record_id==id_num,]$cbcl_internal_18)
EXTERNAL %>% filter(external_raw==DATA[DATA$record_id==id_num,]$cbcl_external_18)
TOTAL %>% filter(total_raw==DATA[DATA$record_id==id_num,]$cbcl_totalprobs_18)
head(internal)
head(INTERNAL)
INTERNAL %>% filter(raw==DATA[DATA$record_id==id_num,]$cbcl_internal_18)
EXTERNAL %>% filter(raw==DATA[DATA$record_id==id_num,]$cbcl_external_18)
TOTAL %>% filter(raw==DATA[DATA$record_id==id_num,]$cbcl_totalprobs_18)
INT <- INTERNAL %>% filter(raw==DATA[DATA$record_id==id_num,]$cbcl_internal_18)
EXT <- EXTERNAL %>% filter(raw==DATA[DATA$record_id==id_num,]$cbcl_external_18)
TOT <- TOTAL %>% filter(raw==DATA[DATA$record_id==id_num,]$cbcl_totalprobs_18)
rbind(INT, EXT, TOT)
SUB_DATA <- rbind(INT, EXT, TOT)
SUB_DATA$Type <- c("Interalizing Problems", "Externalizing Problems", "Total Problems")
SUB_DATA
SUB_DATA <- rbind(INT, EXT, TOT)
Type <- c("Interalizing Problems", "Externalizing Problems", "Total Problems")
SUB_DATA <- cbind(Type, SUB_DATA)
SUB_DATA
# I need to create a look up table to translate from the raw scores to t-scores
INTERNAL <- read.csv("./cbcl_internal.csv", sep=",",
stringsAsFactors = TRUE, na.strings=c("","NA"))
EXTERNAL <- read.csv("./cbcl_external.csv", sep=",",
stringsAsFactors = TRUE, na.strings=c("","NA"))
TOTAL <- read.csv("./cbcl_total.csv", sep=",",
stringsAsFactors = TRUE, na.strings=c("","NA"))
INT <- INTERNAL %>% filter(raw==DATA[DATA$record_id==id_num,]$cbcl_internal_18)
EXT <- EXTERNAL %>% filter(raw==DATA[DATA$record_id==id_num,]$cbcl_external_18)
TOT <- TOTAL %>% filter(raw==DATA[DATA$record_id==id_num,]$cbcl_totalprobs_18)
SUB_DATA <- rbind(INT, EXT, TOT)
Type <- c("Interalizing Problems", "Externalizing Problems", "Total Problems")
SUB_DATA <- cbind(Type, SUB_DATA)
SUB_DATA
knitr::kable(SUB_DATA,
col.names = c("Type", "Raw Score", "T-Score", "Percentile"),
format = "simple")
INTERNAL <- read.csv("./cbcl_internal.csv", sep=",",
stringsAsFactors = TRUE, na.strings=c("","NA"))
EXTERNAL <- read.csv("./cbcl_external.csv", sep=",",
stringsAsFactors = TRUE, na.strings=c("","NA"))
TOTAL <- read.csv("./cbcl_total.csv", sep=",",
stringsAsFactors = TRUE, na.strings=c("","NA"))
INT <- INTERNAL %>% filter(raw==DATA[DATA$record_id==id_num,]$cbcl_internal_18[2])
EXT <- EXTERNAL %>% filter(raw==DATA[DATA$record_id==id_num,]$cbcl_external_18[2])
TOT <- TOTAL %>% filter(raw==DATA[DATA$record_id==id_num,]$cbcl_totalprobs_18[2])
SUB_DATA <- rbind(INT, EXT, TOT)
Type <- c("Interalizing Problems", "Externalizing Problems", "Total Problems")
SUB_DATA <- cbind(Type, SUB_DATA)
INTERNAL <- read.csv("./cbcl_internal.csv", sep=",",
stringsAsFactors = TRUE, na.strings=c("","NA"))
EXTERNAL <- read.csv("./cbcl_external.csv", sep=",",
stringsAsFactors = TRUE, na.strings=c("","NA"))
TOTAL <- read.csv("./cbcl_total.csv", sep=",",
stringsAsFactors = TRUE, na.strings=c("","NA"))
INT <- INTERNAL %>% filter(raw==DATA[DATA$record_id==id_num,]$cbcl_internal_18)
EXT <- EXTERNAL %>% filter(raw==DATA[DATA$record_id==id_num,]$cbcl_external_18)
TOT <- TOTAL %>% filter(raw==DATA[DATA$record_id==id_num,]$cbcl_totalprobs_18)
SUB_DATA <- rbind(INT, EXT, TOT)
Type <- c("Interalizing Problems", "Externalizing Problems", "Total Problems")
SUB_DATA <- cbind(Type, SUB_DATA)
knitr::kable(SUB_DATA,
col.names = c("Type", "Raw Score", "T-Score", "Percentile"),
format = "simple")
INTERNAL <- read.csv("./cbcl_internal.csv", sep=",",
stringsAsFactors = TRUE, na.strings=c("","NA"))
EXTERNAL <- read.csv("./cbcl_external.csv", sep=",",
stringsAsFactors = TRUE, na.strings=c("","NA"))
TOTAL <- read.csv("./cbcl_total.csv", sep=",",
stringsAsFactors = TRUE, na.strings=c("","NA"))
INT <- INTERNAL %>% filter(raw==DATA[DATA$record_id==id_num,]$cbcl_internal_18)
INT <- INTERNAL %>% filter(raw==DATA[DATA$record_id==id_num,]$cbcl_internal_18)
INT <- INTERNAL %>% filter(raw==DATA[DATA$record_id==id_num,]$cbcl_internal_18[2])
EXT <- EXTERNAL %>% filter(raw==DATA[DATA$record_id==id_num,]$cbcl_external_18[2])
TOT <- TOTAL %>% filter(raw==DATA[DATA$record_id==id_num,]$cbcl_totalprobs_18[2])
DATA[DATA$record_id==id_num,]$cbcl_internal_18[2]
knitr::opts_chunk$set(echo = TRUE)
library("tidyverse"); library("ggrepel")
# Set the appropriate working directory
getwd()
setwd("C:/Users/kelop/Box/Infant Motor R01/WU Only Infant Motor R01/Logistics/Assessment Summaries/Aim1_18mth/Sample Data/")
list.files()
DATA <- read.csv("./InfantMotorDevelopme-Aim118MonthParticipa_DATA_2022-10-06_1350.csv",
sep=",", stringsAsFactors = TRUE, na.strings=c("","NA"))
# Set the record ID number for whom you want this report:
id_num <- "WU1001101"
# Code will pull out the preferred name for that subject:
sub <- as.character(factor(DATA[DATA$record_id==id_num,]$preferredname[1]))
DOB <- as.character(factor(DATA[DATA$record_id==id_num,]$dateofbirth[1]))
visit <-as.character(factor(DATA[DATA$record_id==id_num,]$acceldate[2]))
# Create a General Background Chart
area <- factor(c(rep("Communication", 60), rep("Gross Motor", 60),
rep("Fine Motor", 60), rep("Problem Solving", 60),
rep("Personal-Social", 60)))
score <- c(rep(seq(1:60), 5))
cutoff <- c(rep(29.65, 60), rep(22.25, 60),
rep(25.14, 60), rep(27.72, 60),
rep(25.34, 60))
cutoff2 <- c(rep(38.65, 60), rep(34, 60),
rep(36, 60), rep(38.72, 60),
rep(36.34, 60))
CUTOFFS <- data.frame(area,score, cutoff, cutoff2)
CUTOFFS <- CUTOFFS %>% group_by(area) %>%
mutate(code = factor(ifelse(score<=cutoff, "red", ifelse(score<=cutoff2, "yellow", "green"))))
CUTOFFS$area <- fct_relevel(CUTOFFS$area, "Personal-Social", "Problem Solving", "Fine Motor", "Gross Motor", "Communication")
CUTOFFS$code <- fct_relevel(CUTOFFS$code, "green", "yellow", "red")
p <- ggplot(data=CUTOFFS, aes(x=area)) +
geom_bar(aes(group=code, fill=code), col="black", position="stack", stat="count") +
coord_flip() +
scale_x_discrete(name = "Area") +
scale_y_continuous(name = "Score", limits = c(0,60), breaks=c(seq(from=0, to=60, by=5))) +
scale_fill_manual(values = c("lightgreen", "palegoldenrod", "skyblue1")) +
theme_bw()+
theme(axis.text=element_text(size=10, color="black"),
legend.text=element_text(size=10, color="black"),
legend.title=element_text(size=10, face="bold"),
axis.title=element_text(size=10, face="bold"),
plot.title=element_text(size=10, face="bold", hjust=0.5),
panel.grid.minor = element_blank(),
strip.text = element_text(size=10, face="bold"),
legend.position = "none")
SUB_DATA <- DATA %>% filter(preferredname == sub) %>%
select(record_id, agestage_comscore_18, agestage_grossscore_18, agestage_finescore_18,
agestage_probsolvscore_18, agestage_persocscore_18) %>%
rename("Communication" = agestage_comscore_18,
"Gross Motor" = agestage_grossscore_18,
"Fine Motor"  = agestage_finescore_18,
"Problem Solving" = agestage_probsolvscore_18,
"Personal-Social" = agestage_persocscore_18)
SUB_DATA <- SUB_DATA %>% pivot_longer(cols="Communication":"Personal-Social",
names_to = "area", values_to = "score")
p <- p + geom_segment(data=SUB_DATA, aes(x=area, xend=area, y=0, yend=score), lwd=1.5) +
geom_point(data=SUB_DATA, aes(x=area, y=score),
size=3, color="black",
fill="grey20", shape=21, stroke=2) +
geom_label(data=SUB_DATA, aes(x=area, y=score, label = score),
fill="black", color = "white", fontface = "bold")
cm <- SUB_DATA[SUB_DATA$area=="Communication",]$score
gm <- SUB_DATA[SUB_DATA$area=="Gross Motor",]$score
fm <- SUB_DATA[SUB_DATA$area=="Fine Motor",]$score
pb <- SUB_DATA[SUB_DATA$area=="Problem Solving",]$score
ps <- SUB_DATA[SUB_DATA$area=="Personal-Social",]$score
#print(p)
SUB_DATA <- DATA %>% filter(preferredname == sub) %>%
select(record_id, mchat_risklevel, mchat_qc, mchat_score) %>%
rename("M-CHAT Score" = mchat_score,
"Risk Level" = mchat_risklevel)
knitr::kable(SUB_DATA %>% select(-record_id, - mchat_qc) %>%
relocate(`M-CHAT Score`, `Risk Level`),
format = "simple"
)
SUB_DATA <- DATA %>% filter(preferredname == sub) %>%
select(record_id, cdi_vocabunderstoodpercent_18, cdi_vocabproducedpercent_18) %>%
rename("Words Produced (percentile)" = cdi_vocabproducedpercent_18,
"Words Understood (percentile)" = cdi_vocabunderstoodpercent_18)
knitr::kable(t(SUB_DATA %>% select(-record_id) %>%
relocate(`Words Produced (percentile)`, `Words Understood (percentile)`)),
format = "simple")
INTERNAL <- read.csv("./cbcl_internal.csv", sep=",",
stringsAsFactors = TRUE, na.strings=c("","NA"))
EXTERNAL <- read.csv("./cbcl_external.csv", sep=",",
stringsAsFactors = TRUE, na.strings=c("","NA"))
TOTAL <- read.csv("./cbcl_total.csv", sep=",",
stringsAsFactors = TRUE, na.strings=c("","NA"))
INT <- INTERNAL %>% filter(raw==DATA[DATA$record_id==id_num,]$cbcl_internal_18)
EXT <- EXTERNAL %>% filter(raw==DATA[DATA$record_id==id_num,]$cbcl_external_18)
TOT <- TOTAL %>% filter(raw==DATA[DATA$record_id==id_num,]$cbcl_totalprobs_18)
SUB_DATA <- rbind(INT, EXT, TOT)
Type <- c("Interalizing Problems", "Externalizing Problems", "Total Problems")
SUB_DATA <- cbind(Type, SUB_DATA)
DATA[DATA$record_id==id_num,]$cbcl_internal_18[2]
INT <- INTERNAL %>% filter(raw==DATA[DATA$record_id==id_num,]$cbcl_internal_18[2])
EXT <- EXTERNAL %>% filter(raw==DATA[DATA$record_id==id_num,]$cbcl_external_18[2])
TOT <- TOTAL %>% filter(raw==DATA[DATA$record_id==id_num,]$cbcl_totalprobs_18[2])
SUB_DATA <- rbind(INT, EXT, TOT)
SUB_DATA
INT
SUB_DATA
nrow(SUB_DATA)
if (nrow(SUB_DATA)==0) {
SUB_DATA$raw <- c(NA,NA,NA)
SUB_DATA$t <- c(NA,NA,NA)
SUB_DATA$p <- c(NA,NA,NA)
}
SUB_DATA
if (nrow(SUB_DATA)==0) {
rbind(SUB_DATA, c(NA,NA,NA), c(NA,NA,NA), c(NA,NA,NA))
}
INT <- INTERNAL %>% filter(raw==DATA[DATA$record_id==id_num,]$cbcl_internal_18[2])
EXT <- EXTERNAL %>% filter(raw==DATA[DATA$record_id==id_num,]$cbcl_external_18[2])
TOT <- TOTAL %>% filter(raw==DATA[DATA$record_id==id_num,]$cbcl_totalprobs_18[2])
SUB_DATA <- rbind(INT, EXT, TOT)
SUB_DATA
if (nrow(SUB_DATA)==0) {
rbind(SUB_DATA, NA,NA,NA, NA,NA,NA, NA,NA,NA)
}
INT
if (nrow(INT)==0) {
INT$raw <- c(NA)
INT$t <- c(NA)
INT$p <- c(NA)
}
INT <- INTERNAL %>% filter(raw==DATA[DATA$record_id==id_num,]$cbcl_internal_18[2])
EXT <- EXTERNAL %>% filter(raw==DATA[DATA$record_id==id_num,]$cbcl_external_18[2])
TOT <- TOTAL %>% filter(raw==DATA[DATA$record_id==id_num,]$cbcl_totalprobs_18[2])
SUB_DATA <- rbind(INT, EXT, TOT)
SUB_DATA
SUB_DATA [ nrow(SUB_DATA) + 3 , ] <- NA
SUB_DATA
INT <- INTERNAL %>% filter(raw==DATA[DATA$record_id==id_num,]$cbcl_internal_18[2])
EXT <- EXTERNAL %>% filter(raw==DATA[DATA$record_id==id_num,]$cbcl_external_18[2])
TOT <- TOTAL %>% filter(raw==DATA[DATA$record_id==id_num,]$cbcl_totalprobs_18[2])
SUB_DATA <- rbind(INT, EXT, TOT)
SUB_DATA
if(nrow(SUB_DATA==0)) {
SUB_DATA [ nrow(SUB_DATA) + 3 , ] <- NA
}
SUB_DATA
SUB_DATA
nrow(SUB_DATA==0)
nrow(SUB_DATA)==0
if(nrow(SUB_DATA)==0) {
SUB_DATA [ nrow(SUB_DATA) + 3 , ] <- NA
}
SUB_DATA
Type <- c("Interalizing Problems", "Externalizing Problems", "Total Problems")
SUB_DATA <- cbind(Type, SUB_DATA)
# Loading the essential libraries.
library("ggplot2"); library("lme4"); library("car"); library("dplyr"); library("lmerTest");
# If these packages are not installed already, run the following code:
install.packages("ggplot2"); install.packages("lme4"); install.packages("car"); install.packages("dplyr"); install.packages("lmerTest");
# Loading the essential libraries.
library("ggplot2"); library("lme4"); library("car"); library("dplyr"); library("lmerTest");
install.packages("rlang")
install.packages("rlang")
install.packages("rlang")
install.packages("rlang")
install.packages("rlang")
# Loading the essential libraries.
library("ggplot2"); library("lme4"); library("car"); library("dplyr"); library("lmerTest");
install.packages("rlang")
install.packages("rlang")
